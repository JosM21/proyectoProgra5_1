<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>